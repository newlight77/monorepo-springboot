server:
    port: 9082
    servlet:
        context-path: /api

security:
    oauth:
        issuer: ${OKTA_OAUTH2_ISSUER}
        audience: ${OKTA_OAUTH2_AUDIENCE}
        client-id: ${OKTA_OAUTH2_CLIENT_ID}
        client-secret: ${OKTA_OAUTH2_CLIENT_SECRET}

#    jwt:
#        key-store: classpath:keystore.jks
#        key-store-password: letmein
#        key-pair-alias: mytestkey
#        key-pair-password: changeme

spring:
    datasource:
        url: ${POSTGRES_URL}
        username: ${POSTGRES_USER}
        password: ${POSTGRES_PASSWORD}
        platform: postgresql
        driver-class-name: org.postgresql.Driver
    jpa:
        show-sql: ${JPA_SHOW_SQL}
        generate-ddl: ${JPA_GENERATE_DDL}
        hibernate:
            ddl-auto: ${HIBERNATE_DDL_AUTO}
#    liquibase:
#        change-log=classpath: db/changelog/db.changelog-master.xml
    mail:
        host: ${SMTP_HOST}
        port: ${SMTP_PORT}
        username: ${SMTP_USERNAME}
        password: ${SMTP_PASSWORD}
#        properties:
#            mail:
#                smtp:
#                    auth: true
#                    starttls:
#                        enable: true
    servlet:
        multipart:
            enabled: true
            file-size-threshold: 2KB
            max-file-size: 3MB
            max-request-size: 3MB

#javax:
#    persistence:
#        schema-generation:
#            scripts:
#                create-target: schema.sql

logging:
#    config: classpath:logback-spring.xml
    file: core.log
    path: ${DATA_LOGS_PATH}
    org.apache.catalina: DEBUG


core:
    baseUrl: ${CORE_BASE_URL}
    frontendUrl: ${CORE_FRONTEND_URL}

## Can be set to false to disable security during local development
#management:
#    endpoints:
#        web:
#            cors:
#                allowed-origins: *
#                allowed-headers: *
#                allowed-methods: GET,POST,PUT,PATCH,DELETE,OPTIONS
#                max-age: 3600

keycloak:
    configurationFile: classpath:keycloak.json
#    enabled: true
#    cors: true
#    realm: dev.tricefal.io
#    auth-server-url: http://localhost:9080/auth
#    ssl-required: external
#    resource: core-api
#    bearer-only: true
#    credentials:
#        secret:
#    public-client: true