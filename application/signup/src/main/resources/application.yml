target:
    env: ${TARGET_ENV}

server:
    port: 8080
    servlet:
        context-path: /api

    shutdown:
        grace-period: 30s

springdoc:
    api-docs:
        enabled: ${OPEN_API_DOCS_ENABLED}
    swagger-ui:
        enabled: ${OPEN_API_SWAGGER_UI_ENABLED}

security:
    enabled: ${SECURITY_ENABLED}
    csrf:
        enabled: ${SECURITY_ENABLED_CSRF}
#    ignored: /**


spring:
    main:
        allow-bean-definition-overriding: true


    datasource:
        url: ${POSTGRES_URL}
        username: ${POSTGRES_USER}
        password: ${POSTGRES_PASSWORD}
        platform: postgresql
        driver-class-name: org.postgresql.Driver
    jpa:
        show-sql: ${JPA_SHOW_SQL}
        generate-ddl: ${JPA_GENERATE_DDL}
        hibernate:
            ddl-auto: ${HIBERNATE_DDL_AUTO}
        properties:
            hibernate:
                show_sql: false
#    liquibase:
#        change-log=classpath: db/changelog/db.changelog-master.xml
    mail:
        host: ${SMTP_HOST}
        port: ${SMTP_PORT}
        username: ${SMTP_USERNAME}
        password: ${SMTP_PASSWORD}
#        properties:
#            mail:
#                smtp:
#                    auth: true
#                    starttls:
#                        enable: true
    servlet:
        multipart:
            enabled: true
            file-size-threshold: 2KB
            max-file-size: 5MB
            max-request-size: 5MB

#javax:
#    persistence:
#        schema-generation:
#            scripts:
#                create-target: schema.sql

logging:
    level:
        org.springframework: WARN
        liquibase: WARN
        org.hibernate: WARN
        io.tricefal.core: ${CORE_LOGGING_LEVEL:INFO}
        com.zaxxer: ERROR
        org.keycloak: WARN
    org.apache.catalina: WARN
    pattern:
        console: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
#    config: classpath:logback-spring.xml
    file: core.log
    path: ${DATA_LOGS_PATH}


#### Custom

data:
    files:
        path: ${DATA_FILES_PATH}

notification:
    mail:
        from: ${MAIL_FROM}
        admin: ${MAIL_ADMIN}

    sms:
        admin: ${SMS_ADMIN_NUMBER}
        twilio:
            phoneNumber: ${TWILIO_PHONE_NUMBER}
            accountSid: ${TWILIO_ACCOUNT_SID}
            authToken: ${TWILIO_AUTH_TOKEN}

encryption:
    secretKey: ${ENCRYPTION_SECRET_KEY}

core:
    baseUrl: ${CORE_BASE_URL}
    frontendUrl: ${CORE_FRONTEND_URL}

## Can be set to false to disable security during local development
management:
    endpoints:
        web:
            exposure:
                include: ${SPRING_ACTUATOR_ENDPOINTS}
#            cors:
#                allowed-origins: *
#                allowed-headers: *
#                allowed-methods: GET,POST,PUT,PATCH,DELETE,OPTIONS
#                max-age: 3600

keycloak:
#    configurationFile: ${KEYCLOAK_CONFIGFILE}
    enabled: ${KEYCLOAK_ENABLED}
    cors: true
    enable-basic-auth: ${KEYCLOAK_ENABLE_BASIC_AUTH}
    realm: ${KEYCLOAK_ADAPTER_REALM}
    auth-server-url: ${KEYCLOAK_ADAPTER_AUTH_SERVER_URL}
    ssl-required: ${KEYCLOAK_ADAPTER_SSL_REQUIRED}
    resource: ${KEYCLOAK_ADAPTER_RESOURCE}
    use-resource-role-mappings: ${KEYCLOAK_ADAPTER_USER_RESOURCE_ROLE_MAPPINGS}
    bearer-only: ${KEYCLOAK_ADAPTER_BEARER_ONLY}
    credentials:
        secret: ${KEYCLOAK_ADAPTER_CREDENTIALS_SECRET}
    public-client: ${KEYCLOAK_ADAPTER_PUBLIC_CLIENT}
    verify-token-audience: ${KEYCLOAK_ADAPTER_VERIFY_TOKEN_AUDIENCE}
    principal-attribute: preferred_username

#    proxy-url: ${KEYCLOAL_ADAPTER_PROXY_URL}
#    disable-trust-manager: ${KEYCLOAL_ADAPTER_DISABLE_TRUST_MANAGER}
#    allow-any-hostname : ${KEYCLOAL_ADAPTER_ALLOW_ANY_HOSTNAME}
#    truststore: ${KEYCLOAL_ADAPTER_TRUSTSTORE},
#    truststore-password: ${KEYCLOAL_ADAPTER_TRUSTSTORE_PASSWORD},
#    client-keystore: ${KEYCLOAL_ADAPTER_KEYSTORE},
#    client-keystore-password: ${KEYCLOAL_ADAPTER_KEYSTORE_PASSWORD},
#    client-key-password: ${KEYCLOAL_ADAPTER_KEYS_PASSWORD},

    securityConstraints[0]:
        authRoles[0]: ROLE_user-role
        authRoles[1]: ROLE_ac_billing_r
        authRoles[2]: ROLE_ac_billing_w
        authRoles[3]: ROLE_ac_client_r
        authRoles[4]: ROLE_ac_client_w
        authRoles[5]: ROLE_ac_collaborator_r
        authRoles[6]: ROLE_ac_collaborator_w
        authRoles[7]: ROLE_ac_contract_r
        authRoles[8]: ROLE_ac_contract_w
        authRoles[9]: ROLE_ac_freelance_r
        authRoles[10]: ROLE_ac_freelance_w
        authRoles[11]: ROLE_ac_steering_r
        authRoles[12]: ROLE_ac_steering_w
        authRoles[13]: ROLE_ac_tricefal_r
        authRoles[14]: ROLE_ac_tricefal_w
