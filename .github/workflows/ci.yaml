name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, closed]
    branches: [ main ]

env:
  TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    
jobs:
  display-variables:
    name: display ci variables
    runs-on: ubuntu-latest
    environment: CI
    steps:
    - name: Use variables
      run: |
        echo "SECRET_TOKEN : $SECRET_TOKEN"
        echo "VAR_TOKEN : $VARS_TOKEN"
        echo "ENV_TOKEN : $ENV_TOKEN"
      env:
        SECRET_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        VARS_TOKEN: ${{ vars.SLACK_BOT_TOKEN }}
        ENV_TOKEN: ${{ env.TOKEN }}

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project sources
      uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'
        cache: 'gradle'
    # - name: Setup Gradle
    #   uses: gradle/gradle-build-action@v2
    - name: Run test
      run: make test
    - name: upload coverage from unit tests
      uses: actions/upload-artifact@v3
      with:
        name: coverage-from-tests
        path: |
          **/build/jacoco/jacocoTestReport.xml
        retention-days: 1

  coverage:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: download coverage from tests
        uses: actions/download-artifact@v3
        id: download-coverage-from-tests
        with:
          name: coverage-from-tests
        continue-on-error: true
      - name : prepare and merge coverage files
        run: make merge-coverage
      - name: codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/unit/shared-util-build-jacoco-jacocoTestReport.xml,./coverage/unit/shared-sso-keycloak-adapter-build-jacoco-jacocoTestReport.xml,./coverage/unit/application-signup-build-jacoco-jacocoTestReport.xml,./coverage/unit/infrastructure-encryption-build-jacoco-jacocoTestReport.xml./coverage/unit/infrastructure-notification-build-jacoco-jacocoTestReport.xml./coverage/unit/infrastructure-signup-build-jacoco-jacocoTestReport.xml,./coverage/unit/infrastructure-storage-build-jacoco-jacocoTestReport.xml,./coverage/unit/infrastructure-cgu-build-jacoco-jacocoTestReport.xml,./coverage/unit/infrastructure-mission-build-jacoco-jacocoTestReport.xml,./coverage/unit/infrastructure-pricer-reference-build-jacoco-jacocoTestReport.xml,./coverage/unit/infrastructure-keycloak-client-build-jacoco-jacocoTestReport.xml,./coverage/unit/infrastructure-freelance-build-jacoco-jacocoTestReport.xml,./coverage/unit/infrastructure-company-build-jacoco-jacocoTestReport.xml,./coverage/unit/domain-pricer-build-jacoco-jacocoTestReport.xml,./coverage/unit/domain-notification-build-jacoco-jacocoTestReport.xml,./coverage/unit/domain-signup-build-jacoco-jacocoTestReport.xml,./coverage/unit/domain-mission-build-jacoco-jacocoTestReport.xml,./coverage/unit/domain-freelance-build-jacoco-jacocoTestReport.xml./coverage/unit/domain-company-build-jacoco-jacocoTestReport.xml
          flags: tests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: false # optional (default = false)

  ci-passed-notif:
    needs:
      - coverage
    runs-on: ubuntu-latest
    environment: CI
    steps:
      - name: slack notificaiton - ci passed
        uses: slackapi/slack-github-action@v1.22.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: "C05UA1LUW1H" #ci
          payload: |
            {
              "text": "github workflow",
              "attachments": [
                {
                  "color": "warning",
                  "pretext": "Quality Gate bypassed with no-coverage",
                  "fields": [
                    {
                      "title": "Repo",
                      "value": "<https://github.com/${{ github.repository }} | ${{ github.repository }}>",
                      "short": true
                    },
                    {
                      "title": "Pull Request",
                      "short": true,
                      "value": "<https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}>"
                    },
                    {
                      "title": "Status",
                      "short": true,
                      "value": "CI Passed"
                    },
                    {
                      "title": "Branch",
                      "value": "${{ github.head_ref || github.ref_name }}",
                      "short": true
                    }
                  ],
                  "footer_icon": "https://github.githubassets.com/favicon.ico",
                  "footer": "<https://github.com/${{ github.repository }} | ${{ github.repository }}/pull/${{ github.event.pull_request.number }}>"
                }
              ]
            }
